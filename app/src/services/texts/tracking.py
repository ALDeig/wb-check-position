from app.src.services.wb.parser import Positions


EMOJI = {True: "‚úÖ", False: "‚ùå"}
HEADER_TEXT = (
    '–ê—Ä—Ç–∏–∫—É–ª {} –ø–æ –∑–∞–ø—Ä–æ—Å—É <strong>"{}"</strong>\n\n'
    "–ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ\n"
    "‚úÖ - –µ—Å—Ç—å, ‚ùå - –Ω–µ—Ç;\n"
    "üìä –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è 32, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 2;\n"
    "üì¢ —Ä–µ–∫–ª–∞–º–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è 23, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 1\n\n"
)
FOOTER_TEXT = "–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"


def get_tracking_text(query: str, articule: str | int, tracking: Positions) -> str:
    text = HEADER_TEXT.format(articule, query)
    for location in tracking.positions:
        if location.promo_position:
            promo_position_text = (
                f"üì¢ –ø–æ–∑–∏—Ü–∏—è {location.promo_position}, "
                f"—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {location.promo_page}; "
            )
        else:
            promo_position_text = ""
        text += (
            f"\n{EMOJI[bool(location.position)]} {location.location} - "
            f"{promo_position_text}"
            f"üìä –ø–æ–∑–∏—Ü–∏—è {location.position}, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {location.page}"
        )
    text += f"\n\n{FOOTER_TEXT}"
    
    return text


def get_text_track(query: str, articule: int) -> str:
    return f"–ê—Ä—Ç–∏–∫—É–ª: {articule}\n–ó–∞–ø—Ä–æ—Å: {query}"
